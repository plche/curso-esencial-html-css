@font-face {
  font-family: charter;
  src: url('../fonts/charter-regular.otf');
  font-style: normal;
  font-weight: 400;
}
@font-face {
  font-family: charter;
  src: url('../fonts/charter-italic.otf');
  font-style: italic;
  font-weight: 400;
}
@font-face {
  font-family: charter;
  src: url('../fonts/charter-bold.otf');
  font-style: normal;
  font-weight: bold;
}
@font-face {
  font-family: charter;
  src: url('../fonts/charter-bold-italic.otf');
  font-style: italic;
  font-weight: bold;
}

:root {
  font-size: 18px;
  --gray30: #212121;
  --gray20: #212429;
  --gray10: #616161;
}

body {
  color: var(--gray30);
  font-family: 'Roboto', sans-serif;
  /* font-family: charter; */
}

a {
  color: var(--gray30);
}

header {
  /* Se puede volver a establecer un nuevo valor para la "custom property"
  '--gray10' que aplicará solo a este selector */
  /* --gray10: red; */
  font-size: 14px;
  color: var(--gray10);
}

header a {
  color: var(--gray10);
  text-decoration: none;
}

header a:hover {
  color: var(--gray30);
}

nav details summary {
  font-weight: bold;
}

h1 {
  font-size: 60px;
  /* text-decoration: underline; */
  /* font-size: 3.75em; */
}

h2 {
  font-size: 2em;
}

h3 {
  font-size: 1.5em;
}

pre {
  background: #FEC62E;
}

.hero {
  background-image: linear-gradient(to top, rgba(255, 255, 255, .3), transparent), url('../images/pattern.png');
  /* un color, por ejemplo, blanco, puede expresarse como una función rgba() */
  /* linear-gradient(to top, red, blue) degradado va de abajo hacia arriba y de rojo a azul */
  /* background: red url('../images/pattern.png'); */
  /* background-repeat: no-repeat; La imagen no se repetirá, util para cuando se trata de una fotografía */
  /* background-position: left 50px bottom -50px; posicionará la imagen en alguna combinación de los ejes X e Y,
   o hasta en el centro. */
  /* background-size: cover; Expandirá al 100% sin perder la proporción */
  height: 350px;
}

/* CSS Counters: "counter()" reset, increment, etc. */
.section-content {
  counter-reset: titleList;
}

.section-content h3 {
  counter-increment: titleList;
}

/* Empleamos los pseudo elementos (::after, ::before, etc) para agregar contenido que no afectará la accesibilidad
de nuestra web, como sucedería si lo agregamos dentro de la semantica HTML */
.section-content h3::before {
  content: counter(titleList, decimal);
}

.section-content h3::after {
  content: '';
  width: 80px;
  height: 4px;
  background: var(--gray30);
  display: inline-block;
}

/* ::selection {
  background: green;
} */